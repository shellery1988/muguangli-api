<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.muguangli.api.mapper.SuggestFeedbackMapper">
  <resultMap id="BaseResultMap" type="com.muguangli.api.pojo.SuggestFeedback">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="open_id" jdbcType="INTEGER" property="openId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="e_mail" jdbcType="VARCHAR" property="eMail" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, open_id, nick_name, phone, qq, e_mail, comment, createtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from suggest_feedback
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from suggest_feedback
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.muguangli.api.pojo.SuggestFeedback">
    insert into suggest_feedback (id, open_id, nick_name, 
      phone, qq, e_mail, comment, 
      createtime)
    values (#{id,jdbcType=INTEGER}, #{openId,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{eMail,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.muguangli.api.pojo.SuggestFeedback">
    insert into suggest_feedback
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="eMail != null">
        e_mail,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="eMail != null">
        #{eMail,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.muguangli.api.pojo.SuggestFeedback">
    update suggest_feedback
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="eMail != null">
        e_mail = #{eMail,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muguangli.api.pojo.SuggestFeedback">
    update suggest_feedback
    set open_id = #{openId,jdbcType=INTEGER},
      nick_name = #{nickName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      e_mail = #{eMail,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>